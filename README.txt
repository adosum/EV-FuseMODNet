MPI-SINTEL DATA SET

Copyright (c) 2012 Daniel Butler, Jonas Wulff, Garrett Stanley, Michael Black, 
Max-Planck Institute for Intelligent Systems, Tuebingen

This document describes the full MPI-Sintel dataset, as published in

Butler, D., Wulff, J., Stanley, G., Black, M.:
"A naturalistic open source movie for optical flow evaluation", ECCV 2012

For questions and comments contact sintel@tue.mpg.de.


CHANGELOG
=========
2012/08/28      First version of the archives.



HOW TO USE
==========

1) Get the data.
    The data is part of the same archive as this README. For the directory 
    layout, see below.

2) Compute the optical flow on the data in the testing set.
    The testing set contains the Clean and the Final pass of 12 scenes. To 
    upload optical flow results to our website we require you to compute the
    optical flow for both passes.
    Be aware that the evaluation focus lies on the results of the Final pass.

3) Bundle the computed flow data.
    Since the data is too large for submission, we provide a Bundler 
    application for Linux, OSX, and Windows, which subsamples and compresses 
    the optical flow maps and generates a single file for submission.
    For details on how to use the Bundler, see README_BUNDLER.txt in bundler/.

4) Create an account on the website and log in.
    To submit your method, we ask you to register. The purpose of registering
    is to provide an easy interface for you to manage multiple methods, allow
    easy re-uploads, and keep your methods updated. We will never share your 
    data with anyone, and only use your e-mail adress to contact you in case 
    of updates to the dataset.

5) Once logged in, create a new method, or modify an existing one.

6) Upload your data to the website.
    Upload the file generated by the Bundler. This will automatically compute
    the errors of your method, and generate a visualization of your results.
    You can then choose to either publish your results to the website, or keep
    them private.



DIRECTORY STRUCTURE
===================

This section describes the structure of the full MPI-Sintel dataset. Please note
that, depending on your choice of download, you might have only a subset of the
data. All data can be downloaded from http://sintel.is.tue.mpg.de.


training/
    Training set.
    
training/albedo/
    Albedo pass for all sequences in the training set.
    
training/clean/
    Clean pass for all sequences in the training set.
    
training/final/
    Final pass for all sequences in the training set.
    
training/flow/
    Ground truth optical flow for all sequences in the training set, encoded
    as .flo files (see description below). Given is the forward flow.
    
training/flow_viz/
    Visualization of Optical Flow. For color coding, see Baker et al., "A 
    Database and Evaluation Methodology for Optical Flow", IJCV 2011.
    
training/occlusion/
    Occluded regions for all sequences in the training set. Given as intensity
    images, with pixel values = 0 denoting non-occluded regions.
    
training/invalid/
    Invalid pixel maps, given as intensity images.
    
test/
    Testing set. For this set, only the Clean and Final passes are given. All
    further data for the training set is withheld for evaluation purposes.
    
test/clean/
    Clean pass for all sequences in the testing set.
    
test/final/
    Final pass for all sequences in the testing set.

bundler/
    The Bundler application as binaries for Linux, Windows, and OSX.

flow_code/
    Example C and MATLAB code for reading/writing .flo files.



DATA FORMAT
===========

Albedo pass, Clean pass, Final pass, flow visualization:
    Given as 8-bit RGB PNG images.
    
Occlusions, invalid pixels:
    Given as binary intensity images, with a value of 1 denoting occluded
    regions and invalid pixels, respectively.
    
Ground truth optical flow:
    Binary ".flo" file format, storing a 2-channel float image for 
    horizontal (u) and vertical (v) flow components. Floats are stored in 
    little-endian order.

    offset  size    contents
    0       4       Tag: "PIEH" in ASCII, which in little endian happens to be
                    the float 202021.25 (just a sanity check that floats are 
                    represented correctly)
    4       4       Width as an integer
    8       4       Height as an integer
    12      width*height*2*4    Data: float values for u and v, interleaved, in
                                row order, i.e., u[row0,col0], v[row0,col0],
                                u[row0,col1], v[row0,col1], ...
    
    Example code (C and MATLAB) to read/write .flo files is included in the 
    subdirectory flow_code/. The C code was written by Daniel Scharstein, the
    MATLAB code was written by Deqing Sun.
    
    
    
FURTHER INFORMATION
===================

More information and data can be obtained from http://sintel.is.tue.mpg.de.

The dataset is published as
    Butler, D., Wulff, J., Stanley, G., Black, M.:
    "A naturalistic open source movie for optical flow evaluation", ECCV 2012
    
A more technical account can be found in
    Wulff, J., Butler, D., Stanley, G., Black, M.:
    "Lessons and insights from creating a synthetic optical flow benchmark",
    ECCV 2012, Workshop on Unsolved Problems in Optical Flow and Stereo 
    Estimation
    
If you use this work, please cite:

@inproceedings{Butler:ECCV:2012,
  title = {A naturalistic open source movie for optical flow evaluation},
  author = {Butler, D. J. and Wulff, J. and Stanley, G. B. and Black, M. J.},
  booktitle = {European Conf. on Computer Vision (ECCV)},
  editor = {{A. Fitzgibbon et al. (Eds.)}},
  publisher = {Springer-Verlag},
  series = {Part IV, LNCS 7577},
  month = {oct},
  pages = {611--625},
  year = {2012}
}

